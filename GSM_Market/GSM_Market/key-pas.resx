<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAGBgAAAEACADIBgAAJgAAABgYAAABACAAiAkAAO4GAAAoAAAAGAAAADAAAAABAAgAAAAAAKAC
        AAAAAAAAAAAAAAABAAAAAAAAEML0ABDA9AARnekAEMX0ABC+9AApctQAQ7HnABDI9AAaSMQAGEjDABDK
        9ABghdYALmDOADee4AAZXMwAGkfDAC2R3QAPzPQAPbHnAA/F9AAUPbkAFDm4ABDB9QAWcdQAgfD7ABuN
        6gAOxPQAEL/0AGmT3gBN4fkAbt79AHqw4wBezvYAYuX3AGiR2wBf5fgA////AD3j+gAPwfQAFTzCAA3H
        9AAQxvQAHEfGAD6/9gAZRsQAapLaAFrS9wBbz/cAea7jAHep4QByo+AAWtf2ABZAugBEx/UAEVvKAHih
        4QAZWMoAZ9r9AF/Z9gAXXc8AY9j7ABQ+uQAZVcYAFY3nAAzJ9AAlftsAD8n0AD3d+wAfle0AY9X7AGPW
        +wBDpekAMIfgAG2X3QAYPsAAFlbHAFHh/QBW5fcAHND2ADbc+QCL8vsAVuX4ABps2QAaTMIAEmbOACy5
        9wB0nuAADcT0AFnY9wAQjucAXdrzAFvj+QAUO7kAAAAAADGE2wBErOkAadf7ADWl6AAJy/QAP830ABM7
        uQAHzPQAIdn2AKr5/QB06voAgb7nAG7f/QATN7MAFTe9AAjN9ABR3/0AaKzjABQ4uABa0/cAQcr1AFnk
        9wAOyPQAatj9AGuW3wBr3f0Aa978AFnp+wBV5fcAAAAAAEKt6QBg5PcAFjzFAE7d+gBczvYAWdb2AFTc
        +wBU5PcAD1TFABQ7wABDpukAC8P3AH3M7gAQy/QAG0bNAFvt+gATPLkAbuT6AIfz/ABFxvUAVeb3AA3M
        9gBBgdkADdL3AFfl+AAPzfoAVOP3AKr3/QBU7PwAqPD6ABqQ6ABAzvcAWub4ABDF9QASadIAL1jIAHzy
        /ABA5fwAFMb1ABlMxQBAseoAG0C4AH/s+wAaj+kAQcr2ABJp1ABW4/gAC4zeAFfk9wCT2/EADMf0AHmx
        5QBpktoAdKjjAFrU9wBZ4fcAFDi7AAjQ9AA4id8AaeL7ABGt7AAXPsgALdj3ABPR9AAXwvYAReH3AFXY
        +gBrlt4AAAAAAFXV+gBT5vgAhO36AFrk9wAP0PkAD730ABlcywBK1fUAbZnfAJPl9QAUzvYAXeT5AArE
        9AAWPrkAZ+H8AGra+wA9m+UADr/1AAzP9QBFxfYAD8z6AGqW3gARi+YAMoLaAAzA9QAOy/QAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAADtIttgUXV1dXV1dXV1dXV1dXV1dXV1dXSpEOXWGjF1dXV1dXV1d
        XV1dXV1dXV1dXVKKGUVgRxRdXV1dXV1dXV1dXV1dXV1dXZJVuadG0NE9XV1dXV1dXV1dXV1dXV1dXaMg
        K36aPHdeNF1dXV1dXV1dXV1dXV1dXV0JgNQnP8EeQc5dXV1dXV1dXV1dXV1dXV1dCS+Phde+amFcXV1d
        XV1dXV1dXV1dXV1dXQkuNWxZgnhfZF1dXV1dXV1dXV1dXV1dXV0PcXK0qW7PfBVdXV1dXV1dXV1dXV1d
        XV1dD7KocJ5Mt6QVOA4Ox1OlXV1dXV1dXV1dXQiBm2tUf7zSAgICAgICPqVdXV1dXV1dXV0IWGOEh8YE
        BAQEBBsW1RelXV1dXV1dXV1dCDND2QEBAQEBAQEBFpU2XV1dXV1dXV1dXSw6oiYAAAAAAAAAAJ24S11d
        XV1dXV1dXUrIzQMDAwMDE1caEynFF11dXV1dXV1dXQyhrgcHBwdCy0+6dCiRF11dXV1dXV1dXQwlQAoK
        ComTEAUGHU6qDV1dXV1dXV1dXQyYYhER2tOrBV2fBo3MDV1dXV1dXV1dXReztW1lu2YSXV1dBVt5C11d
        XV1dXV1dXVaIpr0hfSMSBV0FBpRaC11dXV1dXV1dXV03mWiWc8ScBhAGUYtvXV1dXV1dXV1dXV2/sZfD
        rINNepDCoGktXV1dXV1dXV1dXV1d1kmtZ1AYGI7KMbBdXV1dXV1dXV1dXV1dXV0cya8wHzIidl1dXQf/
        /wAD//8AAf//AAD//wAAf/8AgD//AMAf/wDgD/8A8Af/APgADwD8AAMA/gABAP8AAQD/gAAA/4AAAP+A
        AAD/gAAA/4AgAP+AcAD/gCAA/8ABAP/AAQD/4AMA//gHACgAAAAYAAAAMAAAAAEAIAAAAAAAYAkAAAAA
        AAAAAAAAAAAAAAAAAAAXXc//MIfg/ziJ3/8ygtr/FD25nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcR8b/H5Xt/2fa
        /f9q2P3/Q6bp/xM8uZMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAabNn/G0bN/xuN6v9j1fv/adf7/0Ol6f8UPbmaAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABBgdn/LLn3/xc+yP8aj+n/Y9b7/2ra+/89m+X/FD65qQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZTMXXXs72/z6/9v8WPMX/GpDo/2PY
        +/9r3f3/MYTb/xZAulYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAGEjD5VzO9v9Fxfb/FTzC/xWN5/9V1fr/bt79/yV+2/8WPrlWAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhI
        w+Vbz/f/Rcb1/xQ7wP8Ri+b/Vdj6/27f/f81pej/FDu5VgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYSMPlWtL3/0TH9f8VN73/EI7n/1Tc
        +/9r3vz/RKzp/xM7uVYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAGkfD5VrT9/9ByvX/FDi7/xJp1P9R3/3/Z+H8/0Kt6f8UObikGkC6MQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpH
        w+Va1Pf/Qcr2/xQ4uP8SadL/UeH9/2ni+/9Aser/EZ3p/xlYyv8ZXMz/GVzM/xlcy/8aTML/G0C40BpG
        vDEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaSMTlWdb2/0DO9/8TN7P/EmbO/07d
        +v8Xwvb/Dr/1/w/E9/8PxPf/D8T3/w/E9/8PyPr/Eqju/xlVxv8bQ7pWAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAGkjE5VnY9/8/zfT/D1TF/wvD9/8PvfT/EL70/xC+9P8QvvT/EL70/xC+
        9P8Qv/T/EMH1/w/M+v8WcdT/Ejq2VwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpI
        xOVa1/b/Pd37/wzA9f8QwPT/EMD0/xDA9P8QwPT/EMD0/xDA9P8QwPT/EMD0/xDB9f8Pzfr/EVvK/3uk
        41kAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZRsTcX9n2/xTG9f8PwfT/EML0/xDC
        9P8QwvT/EML0/xDC9P8QwvT/EML0/xDC9P8QxfX/Ea3s/xQ4toEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAYPsCJStX1/wrE9P8QxfT/EMX0/xDF9P8QxfT/EMX0/w/F9P8NxPT/DsT0/w/F
        9P8QxvT/D9D5/xZWx+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYPcDPQOX8/wzH
        9P8QyPT/EMj0/xDI9P8QyPT/D8n0/xTO9v823Pn/Ldj3/w7I9P8Nx/T/Dcz2/zee4P8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAug9vMPeP6/wzJ9P8QyvT/EMr0/xDK9P8Qy/T/DdL3/y2R
        3f8pctS/Q7Hn/03h+f8c0Pb/VuP4/2m/6f8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAXPMHNVOz8/wnL9P8PzPT/D8z0/w7L9P8Mz/X/C4ze/3+a36AAAAAAL1jIaKjr9/9u5Pr/XeT5/2W6
        5/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWQMO8WeH3/wjQ9P8IzfT/B8z0/xPR
        9P8h2fb/PbHn/wAAAAAAAAAAAAAAAJvZ8P9b4/n/Wen7/2mk3+AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAuYM5bfczu/3/s+/9F4ff/YuX3/2Dk9/9f5fj/YOH2/2+U3KYAAAAAbafh0W7o
        +v9X5fj/Xdrz/2CF1oEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdJ7g96jw
        +v906vr/VOP3/1nk9/9a5Pf/Wub4/1rl+P9f0/D/WOn5/1bl+P9b7fr/aKzj/22Y31oAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAa5beZnSo4/+q9/3/hO36/1fk9/9U5Pf/VuX3/1Xl
        9/9V5vf/U+b4/3zy/P+Bvuf/apLaQwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGqW3kRtl93/k9vx/6r5/f+L8vv/gfD7/4Hw+/+H8/z/k+X1/3ep4f9pktpCAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAaZPedW2Z
        3+F5seX/ea7j/3qw4/9yo+DhaJHbbWuW320AAAAAAAAAAAAAAAAH//8AA///AAH//wAA//8AAH//AIA/
        /wDAH/8A4A//APAD/wD4AAcA/AADAP4AAQD/AAAA/4AAAP+AAAD/gAAA/4AAAP+AIAD/gHAA/4AgAP/A
        AAD/wAEA/+ADAP/4BwA=
</value>
  </data>
</root>